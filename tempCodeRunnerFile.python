import numpy as np
from scipy.stats import norm

def value_at_risk(cls,price,percent):
    log_r = np.diff(np.log(price))
    std_dev = np.std(log_r)
    mean = np.mean(log_r)

    var = norm.ppf(1-percent/100)*std_dev*np.sqrt(cls)
    return var

historical_prices = np.array([10.2, 10.4, 10.8, 10.6, 10.5, 10.7, 10.3, 10.1, 10.0, 9.8, 9.9, 10.2, 10.5, 10.6, 10.7, 10.8, 11.0, 11.1, 11.3, 11.4, 11.5, 11.6, 11.7, 11.9, 12.1, 12.2, 12.0, 11.7, 11.5, 11.3, 11.2, 11.0, 11.1, 11.3, 11.2, 11.1, 11.0, 10.9, 10.7, 10.5, 10.6, 10.8, 10.9, 11.0, 11.2, 11.3, 11.1, 11.2, 11.3, 11.5, 11.4, 11.3, 11.4, 11.3, 11.2, 11.4, 11.6, 11.8, 11.7, 11.5, 11.6, 11.7, 11.9, 11.8, 11.7, 11.8, 11.9, 12.1, 12.0, 12.2, 12.4, 12.2, 12.0, 11.9, 12.0, 12.1, 11.9, 11.8, 11.6, 11.4, 11.5, 11.3, 11.2, 11.0, 10.9, 11.1, 11.0, 10.8, 10.7, 10.5, 10.4, 10.6, 10.4, 10.3, 10.1, 10.2, 10.4, 10.5, 10.6, 10.8, 10.9, 11.0, 10.8])
var_percent = 5

var = value_at_risk(1, historical_prices, var_percent)
print(f"{var:.2f}")